% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ifn.R
\name{ifn_to_tibble}
\alias{ifn_to_tibble}
\title{Raw IFN data to tibble}
\usage{
ifn_to_tibble(
  provinces,
  versions,
  filter_list,
  folder,
  ...,
  .parallel_options = furrr::furrr_options(scheduling = 1L, stdout = TRUE),
  .verbose = TRUE
)
}
\arguments{
\item{provinces}{A character vector with the two-number codes for the provinces.}

\item{versions}{A character vector with the ifn versions. Valid versions are \code{"ifn2"},
\code{"ifn3"} and \code{"ifn4"}.}

\item{filter_list}{A list of provinces and plots to extract the data from.}

\item{folder}{The path to the folder containing the IFN db files, as character.}

\item{...}{Not used at the moment}

\item{.parallel_options}{An object of class \code{furrr_options}. See
\code{\link[furrr]{furrr_options}}.}

\item{.verbose}{Logical controlling if progress messages are shown.}
}
\value{
A nested tibble. This tibble contains a row per plot/year combination, with the plot
metadata included, as well as columns containing tibbles with tree, shrub, herbs and soil
information. See \code{vignette("inventory_data_tibble", pkg = "esus")}
}
\description{
Transform raw IFN plot data into tidy data for easier use
}
\details{
This function will take every year indicated and retrieve and transform the plot data for the
provinces, versions and plots provided. For that, IFN db files must reside in the folder
indicated in the \code{folder} argument.
}
\section{Filter list}{

If no \code{filter_list} argument is provided, \code{ifn_to_tibble} will attempt to process all
plots for the provinces and ifn versions provided. This will result in sometimes
thousands plots to be extracted, processed and returned, which in turn will cause a big use of
memory (specially when running in parallel processes) and long times of calculation.
Is better to provide a list of departments with the provinces and plots to look for to
narrow the process. This \code{filter_list} should have the following structure:
\preformatted{
   list(
   "01" = c("01_0644_NN_A1_A1"),
   "08" = c("08_1256_NN_A1_xx", "08_0056_xx_A4_xx"),
   "24" = c("24_0270_xx_A4_xx")
  )
  }
\code{esus} package offers workflows to create this automatically, see
\code{vignette("filtering_plots", pkg = "esus")} for more details.
}

\section{Parallel}{

Processing the plots from within an IFN version can be done in parallel (\code{esus} uses
internally the \code{\link[furrr]{furrr}} package for this). This means that, if
parallelization is active, several processes are launched to retrieve the plots data for that
IFN version. This is repeated for all versions provided.

\code{.parallel_options} controls the finer details of how parallelization is performed (see
\code{\link[furrr]{furrr_options}}). But no parallelization can occur without setting first
a \code{\link[future]{plan}}. By default, the chosen plan is \code{\link[future]{sequential}},
so no parellization is done. Changing the plan, i.e. to \code{\link[future]{multisession}} or
to \code{\link[future.callr]{callr}}, will allow \code{ifn_to_tibble} to use parallelization
when retrieving the data.
}

